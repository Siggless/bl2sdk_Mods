from . import compute_fb_scale as compute_fb_scale
from .opengl import FixedPipelineRenderer as FixedPipelineRenderer, ProgrammablePipelineRenderer as ProgrammablePipelineRenderer
from typing import Any

class PygletMixin:
    REVERSE_KEY_MAP: Any = ...
    MOUSE_CURSORS: Any = ...
    def __init__(self) -> None: ...
    def on_mouse_motion(self, x: Any, y: Any, dx: Any, dy: Any) -> None: ...
    def on_key_press(self, key_pressed: Any, mods: Any) -> None: ...
    def on_key_release(self, key_released: Any, mods: Any) -> None: ...
    def on_text(self, text: Any) -> None: ...
    def on_mouse_drag(self, x: Any, y: Any, dx: Any, dy: Any, button: Any, modifiers: Any) -> None: ...
    def on_mouse_press(self, x: Any, y: Any, button: Any, modifiers: Any) -> None: ...
    def on_mouse_release(self, x: Any, y: Any, button: Any, modifiers: Any) -> None: ...
    def on_mouse_scroll(self, x: Any, y: Any, mods: Any, scroll: Any) -> None: ...
    def on_resize(self, width: Any, height: Any) -> None: ...
    def process_inputs(self) -> None: ...

class PygletFixedPipelineRenderer(PygletMixin, FixedPipelineRenderer):
    def __init__(self, window: Any, attach_callbacks: bool = ...) -> None: ...
    def render(self, draw_data: Any) -> None: ...

class PygletProgrammablePipelineRenderer(PygletMixin, ProgrammablePipelineRenderer):
    def __init__(self, window: Any, attach_callbacks: bool = ...) -> None: ...
    def render(self, draw_data: Any) -> None: ...

class PygletRenderer(PygletFixedPipelineRenderer):
    def __init__(self, window: Any, attach_callbacks: bool = ...) -> None: ...

def create_renderer(window: Any, attach_callbacks: bool = ...): ...
